<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7d14de2f-65c0-4bbd-85b6-03fd211dc65a" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/Assets/Scripts/HealthSystem/HealthBar.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Assets/Scripts/JoystickLogic/JoystickMovement.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Assets/Scripts/Shoot.cs" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectId" id="2a5UInoIVhXOBbQ9CZIZQIycalX" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true"
  },
  "keyToStringList": {
    "rider.external.source.directories": [
      "C:\\Users\\vasya\\AppData\\Roaming\\JetBrains\\Rider2023.1\\resharper-host\\DecompilerCache",
      "C:\\Users\\vasya\\AppData\\Roaming\\JetBrains\\Rider2023.1\\resharper-host\\SourcesCache",
      "C:\\Users\\vasya\\AppData\\Local\\Symbols\\src"
    ]
  }
}]]></component>
  <component name="RunManager" selected="Attach to Unity Editor.Attach to Unity Editor">
    <configuration name="Start Unity" type="RunUnityExe" factoryName="Unity Executable">
      <option name="EXE_PATH" value="C:\Program Files\Unity\Hub\Editor\2022.3.15f1\Editor\Unity.exe" />
      <option name="PROGRAM_PARAMETERS" value="-projectPath C:\UnityProjects\Final\FinalProject -debugCodeOptimization" />
      <option name="WORKING_DIRECTORY" value="C:\UnityProjects\Final\FinalProject" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <method v="2" />
    </configuration>
    <configuration name="Unit Tests (batch mode)" type="RunUnityExe" factoryName="Unity Executable">
      <option name="EXE_PATH" value="C:\Program Files\Unity\Hub\Editor\2022.3.15f1\Editor\Unity.exe" />
      <option name="PROGRAM_PARAMETERS" value="-runTests -batchmode -projectPath C:\UnityProjects\Final\FinalProject -testResults Logs/results.xml -testPlatform EditMode -debugCodeOptimization" />
      <option name="WORKING_DIRECTORY" value="C:\UnityProjects\Final\FinalProject" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <method v="2" />
    </configuration>
    <configuration name="Attach to Unity Editor &amp; Play" type="UNITY_DEBUG_RUN_CONFIGURATION" factoryName="UNITY_ATTACH_AND_PLAY" show_console_on_std_err="false" show_console_on_std_out="false" port="50000" address="localhost">
      <option name="allowRunningInParallel" value="false" />
      <option name="listenPortForConnections" value="false" />
      <option name="pid" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <method v="2" />
    </configuration>
    <configuration name="Attach to Unity Editor" type="UNITY_DEBUG_RUN_CONFIGURATION" factoryName="Unity Debug" show_console_on_std_err="false" show_console_on_std_out="false" port="50000" address="localhost">
      <option name="allowRunningInParallel" value="false" />
      <option name="listenPortForConnections" value="false" />
      <option name="pid" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7d14de2f-65c0-4bbd-85b6-03fd211dc65a" name="Changes" comment="" />
      <created>1703607916529</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1703607916529</updated>
      <workItem from="1703607939649" duration="9483000" />
    </task>
    <servers />
  </component>
  <component name="UnityProjectConfiguration" hasMinimizedUI="true" />
  <component name="UnityUnitTestConfiguration" currentTestLauncher="Both" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
  </component>
  <component name="com.github.evgenys91.machinet.common.dslhistory.DslHistoryState">
    <option name="historyDtoById">
      <map>
        <entry key="06d9fc">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/Assets/Scripts/HealthSystem/HealthBar.cs" />
                </list>
              </option>
              <option name="id" value="06d9fc" />
              <option name="initiateTms" value="1703621738335" />
              <option name="request" value="но оно не работает" />
              <option name="response" value="" />
              <option name="responseDescription" value="Извините за путаницу. Я заметил ошибку в коде. Проблема заключается в том, что вы пытаетесь получить доступ к компоненту `TextMeshProUGUI` через `transform.GetComponent&lt;TextMeshProUGUI&gt;()`, но он не был назначен в инспекторе.&#10;&#10;Чтобы исправить это, вам нужно присвоить компонент `TextMeshProUGUI` в инспекторе или в коде. Давайте внесем изменения в метод `Awake()`:&#10;&#10;```csharp&#10;private void Awake()&#10;{&#10;    camera = Camera.main;&#10;    healthBarFilling = transform.Find(&quot;HealthBar&quot;).GetComponent&lt;Image&gt;();&#10;    healthSystem.ChangeHealth += OnHealthChanged;&#10;    healthValueText = GetComponentInChildren&lt;TextMeshProUGUI&gt;(); // Изменение здесь&#10;}&#10;```&#10;&#10;Теперь, когда мы используем `GetComponentInChildren&lt;TextMeshProUGUI&gt;()`, он будет искать компонент `TextMeshProUGUI` в дочерних объектах.&#10;&#10;Попробуйте внести эти изменения и проверить, работает ли теперь вывод значения переменной в текстовом поле." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1703621741588" />
              <option name="usedFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/Assets/Scripts/HealthSystem/HealthBar.cs" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="7663c1">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/Assets/Scripts/HealthSystem/HealthBar.cs" />
                </list>
              </option>
              <option name="id" value="7663c1" />
              <option name="initiateTms" value="1703621704373" />
              <option name="request" value="мне нужно вывести значение переменной в текст" />
              <option name="response" value="" />
              <option name="responseDescription" value="Хорошо, чтобы вывести значение переменной в текст, нам понадобится обновить метод `Update()`. Давайте добавим код, который будет обновлять текстовое поле `healthValueText` с текущим значением переменной `healthSystem`.&#10;&#10;```csharp&#10;private void Update()&#10;{&#10;    healthValueText.text = healthSystem.GetCurrentHealth().ToString();&#10;}&#10;```&#10;&#10;Теперь, при каждом обновлении кадра, текстовое поле будет отображать текущее значение переменной `healthSystem`." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1703621707426" />
              <option name="usedFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/Assets/Scripts/HealthSystem/HealthBar.cs" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="a28398">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/Assets/Scripts/HealthSystem/HealthBar.cs" />
                </list>
              </option>
              <option name="id" value="a28398" />
              <option name="initiateTms" value="1703621940404" />
              <option name="request" value="вот теперь хорошо" />
              <option name="response" value="" />
              <option name="responseDescription" value="Отлично! Рад, что теперь код работает должным образом. Если у тебя есть еще какие-либо вопросы или что-то еще, с чем я могу помочь, не стесняйся спрашивать." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1703621942100" />
              <option name="usedFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/Assets/Scripts/HealthSystem/HealthBar.cs" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="f31a36">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/Assets/Scripts/HealthSystem/HealthBar.cs" />
                </list>
              </option>
              <option name="id" value="f31a36" />
              <option name="initiateTms" value="1703621687935" />
              <option name="request" value="ладно, давай начнем сначала" />
              <option name="response" value="" />
              <option name="responseDescription" value="Хорошо, давай начнем сначала. Что ты хотел бы изменить или улучшить в файле &quot;HealthBar.cs&quot;?" />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1703621690141" />
              <option name="usedFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/Assets/Scripts/HealthSystem/HealthBar.cs" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>